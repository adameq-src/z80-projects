                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                              4 ; This file was generated Sat Mar 28 21:52:28 2015
                              5 ;--------------------------------------------------------
                              6 	.module z80lcd
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _delay_ms
                             13 	.globl _LCD_ShowBin
                             14 	.globl _LCD_Init
                             15 	.globl _LCD_DispString
                             16 	.globl _LCD_DispChar
                             17 	.globl _LCD_SendNibble
                             18 	.globl _LCD_ClearScreen
                             19 ;--------------------------------------------------------
                             20 ; special function registers
                             21 ;--------------------------------------------------------
                     0000    22 _PA	=	0x0000
                     0001    23 _PA_CONTROL	=	0x0001
                     0002    24 _PB	=	0x0002
                     0003    25 _PB_CONTROL	=	0x0003
                     0040    26 _SIO_A_DATA	=	0x0040
                     0041    27 _SIO_A_CMD	=	0x0041
                     0042    28 _SIO_B_DATA	=	0x0042
                     0043    29 _SIO_B_CMD	=	0x0043
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _DATA
                             34 ;--------------------------------------------------------
                             35 ; ram data
                             36 ;--------------------------------------------------------
                             37 	.area _INITIALIZED
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area _DABS (ABS)
                             42 ;--------------------------------------------------------
                             43 ; global & static initialisations
                             44 ;--------------------------------------------------------
                             45 	.area _HOME
                             46 	.area _GSINIT
                             47 	.area _GSFINAL
                             48 	.area _GSINIT
                             49 ;--------------------------------------------------------
                             50 ; Home
                             51 ;--------------------------------------------------------
                             52 	.area _HOME
                             53 	.area _HOME
                             54 ;--------------------------------------------------------
                             55 ; code
                             56 ;--------------------------------------------------------
                             57 	.area _CODE
                             58 ;z80lcd.c:4: void LCD_ShowBin(char byte)
                             59 ;	---------------------------------
                             60 ; Function LCD_ShowBin
                             61 ; ---------------------------------
   0000                      62 _LCD_ShowBin_start::
   0000                      63 _LCD_ShowBin:
   0000 DD E5         [15]   64 	push	ix
   0002 DD 21 00 00   [14]   65 	ld	ix,#0
   0006 DD 39         [15]   66 	add	ix,sp
   0008 F5            [11]   67 	push	af
                             68 ;z80lcd.c:8: for (i = 0x80; i > 0; i = i >> 1)
   0009 21 80 00      [10]   69 	ld	hl,#0x0080
   000C E3            [19]   70 	ex	(sp), hl
   000D                      71 00107$:
                             72 ;z80lcd.c:10: if(byte & i) {
   000D DD 66 04      [19]   73 	ld	h,4 (ix)
   0010 DD 7E 04      [19]   74 	ld	a,4 (ix)
   0013 17            [ 4]   75 	rla
   0014 9F            [ 4]   76 	sbc	a, a
   0015 6F            [ 4]   77 	ld	l,a
   0016 7C            [ 4]   78 	ld	a,h
   0017 DD A6 FE      [19]   79 	and	a, -2 (ix)
   001A 67            [ 4]   80 	ld	h,a
   001B 7D            [ 4]   81 	ld	a,l
   001C DD A6 FF      [19]   82 	and	a, -1 (ix)
   001F B4            [ 4]   83 	or	a,h
   0020 28 0A         [12]   84 	jr	Z,00102$
                             85 ;z80lcd.c:11: LCD_DispChar('1');
   0022 3E 31         [ 7]   86 	ld	a,#0x31
   0024 F5            [11]   87 	push	af
   0025 33            [ 6]   88 	inc	sp
   0026 CDr16r01      [17]   89 	call	_LCD_DispChar
   0029 33            [ 6]   90 	inc	sp
   002A 18 08         [12]   91 	jr	00103$
   002C                      92 00102$:
                             93 ;z80lcd.c:13: LCD_DispChar('0');
   002C 3E 30         [ 7]   94 	ld	a,#0x30
   002E F5            [11]   95 	push	af
   002F 33            [ 6]   96 	inc	sp
   0030 CDr16r01      [17]   97 	call	_LCD_DispChar
   0033 33            [ 6]   98 	inc	sp
   0034                      99 00103$:
                            100 ;z80lcd.c:16: if(i == 0x10)
   0034 DD 7E FE      [19]  101 	ld	a,-2 (ix)
   0037 D6 10         [ 7]  102 	sub	a, #0x10
   0039 20 0E         [12]  103 	jr	NZ,00108$
   003B DD 7E FF      [19]  104 	ld	a,-1 (ix)
   003E B7            [ 4]  105 	or	a, a
   003F 20 08         [12]  106 	jr	NZ,00108$
                            107 ;z80lcd.c:17: LCD_DispChar(' ');
   0041 3E 20         [ 7]  108 	ld	a,#0x20
   0043 F5            [11]  109 	push	af
   0044 33            [ 6]  110 	inc	sp
   0045 CDr16r01      [17]  111 	call	_LCD_DispChar
   0048 33            [ 6]  112 	inc	sp
   0049                     113 00108$:
                            114 ;z80lcd.c:8: for (i = 0x80; i > 0; i = i >> 1)
   0049 DD CB FF 2E   [23]  115 	sra	-1 (ix)
   004D DD CB FE 1E   [23]  116 	rr	-2 (ix)
   0051 AF            [ 4]  117 	xor	a, a
   0052 DD BE FE      [19]  118 	cp	a, -2 (ix)
   0055 DD 9E FF      [19]  119 	sbc	a, -1 (ix)
   0058 E2r5Dr00      [10]  120 	jp	PO, 00125$
   005B EE 80         [ 7]  121 	xor	a, #0x80
   005D                     122 00125$:
   005D FAr0Dr00      [10]  123 	jp	M,00107$
   0060 DD F9         [10]  124 	ld	sp, ix
   0062 DD E1         [14]  125 	pop	ix
   0064 C9            [10]  126 	ret
   0065                     127 _LCD_ShowBin_end::
                            128 ;z80lcd.c:21: void LCD_Init(void)
                            129 ;	---------------------------------
                            130 ; Function LCD_Init
                            131 ; ---------------------------------
   0065                     132 _LCD_Init_start::
   0065                     133 _LCD_Init:
                            134 ;z80lcd.c:23: PB_CONTROL = 0x0F;
   0065 3E 0F         [ 7]  135 	ld	a,#0x0F
   0067 D3 03         [11]  136 	out	(_PB_CONTROL),a
                            137 ;z80lcd.c:24: PB = 0x00;
   0069 3E 00         [ 7]  138 	ld	a,#0x00
   006B D3 02         [11]  139 	out	(_PB),a
                            140 ;z80lcd.c:26: delay_ms(180);
   006D 21 B4 00      [10]  141 	ld	hl,#0x00B4
   0070 E5            [11]  142 	push	hl
   0071 CDr00r00      [17]  143 	call	_delay_ms
                            144 ;z80lcd.c:29: LCD_SendNibble(0x03);
   0074 26 03         [ 7]  145 	ld	h,#0x03
   0076 E3            [19]  146 	ex	(sp),hl
   0077 33            [ 6]  147 	inc	sp
   0078 CDr45r01      [17]  148 	call	_LCD_SendNibble
   007B 33            [ 6]  149 	inc	sp
                            150 ;z80lcd.c:30: delay_ms(5);
   007C 21 05 00      [10]  151 	ld	hl,#0x0005
   007F E5            [11]  152 	push	hl
   0080 CDr00r00      [17]  153 	call	_delay_ms
                            154 ;z80lcd.c:31: LCD_SendNibble(0x03);
   0083 26 03         [ 7]  155 	ld	h,#0x03
   0085 E3            [19]  156 	ex	(sp),hl
   0086 33            [ 6]  157 	inc	sp
   0087 CDr45r01      [17]  158 	call	_LCD_SendNibble
   008A 33            [ 6]  159 	inc	sp
                            160 ;z80lcd.c:32: delay_ms(1);
   008B 21 01 00      [10]  161 	ld	hl,#0x0001
   008E E5            [11]  162 	push	hl
   008F CDr00r00      [17]  163 	call	_delay_ms
                            164 ;z80lcd.c:33: LCD_SendNibble(0x03);
   0092 26 03         [ 7]  165 	ld	h,#0x03
   0094 E3            [19]  166 	ex	(sp),hl
   0095 33            [ 6]  167 	inc	sp
   0096 CDr45r01      [17]  168 	call	_LCD_SendNibble
   0099 33            [ 6]  169 	inc	sp
                            170 ;z80lcd.c:34: delay_ms(1);
   009A 21 01 00      [10]  171 	ld	hl,#0x0001
   009D E5            [11]  172 	push	hl
   009E CDr00r00      [17]  173 	call	_delay_ms
                            174 ;z80lcd.c:35: LCD_SendNibble(0x02);
   00A1 26 02         [ 7]  175 	ld	h,#0x02
   00A3 E3            [19]  176 	ex	(sp),hl
   00A4 33            [ 6]  177 	inc	sp
   00A5 CDr45r01      [17]  178 	call	_LCD_SendNibble
   00A8 33            [ 6]  179 	inc	sp
                            180 ;z80lcd.c:36: delay_ms(1);
   00A9 21 01 00      [10]  181 	ld	hl,#0x0001
   00AC E5            [11]  182 	push	hl
   00AD CDr00r00      [17]  183 	call	_delay_ms
                            184 ;z80lcd.c:38: LCD_SendNibble(0x02);
   00B0 26 02         [ 7]  185 	ld	h,#0x02
   00B2 E3            [19]  186 	ex	(sp),hl
   00B3 33            [ 6]  187 	inc	sp
   00B4 CDr45r01      [17]  188 	call	_LCD_SendNibble
   00B7 33            [ 6]  189 	inc	sp
                            190 ;z80lcd.c:39: LCD_SendNibble(0x08);
   00B8 3E 08         [ 7]  191 	ld	a,#0x08
   00BA F5            [11]  192 	push	af
   00BB 33            [ 6]  193 	inc	sp
   00BC CDr45r01      [17]  194 	call	_LCD_SendNibble
   00BF 33            [ 6]  195 	inc	sp
                            196 ;z80lcd.c:41: LCD_SendNibble(0x00);
   00C0 AF            [ 4]  197 	xor	a, a
   00C1 F5            [11]  198 	push	af
   00C2 33            [ 6]  199 	inc	sp
   00C3 CDr45r01      [17]  200 	call	_LCD_SendNibble
   00C6 33            [ 6]  201 	inc	sp
                            202 ;z80lcd.c:42: LCD_SendNibble(0x0C);
   00C7 3E 0C         [ 7]  203 	ld	a,#0x0C
   00C9 F5            [11]  204 	push	af
   00CA 33            [ 6]  205 	inc	sp
   00CB CDr45r01      [17]  206 	call	_LCD_SendNibble
   00CE 33            [ 6]  207 	inc	sp
                            208 ;z80lcd.c:44: LCD_SendNibble(0x00);
   00CF AF            [ 4]  209 	xor	a, a
   00D0 F5            [11]  210 	push	af
   00D1 33            [ 6]  211 	inc	sp
   00D2 CDr45r01      [17]  212 	call	_LCD_SendNibble
   00D5 33            [ 6]  213 	inc	sp
                            214 ;z80lcd.c:45: LCD_SendNibble(0x01);
   00D6 3E 01         [ 7]  215 	ld	a,#0x01
   00D8 F5            [11]  216 	push	af
   00D9 33            [ 6]  217 	inc	sp
   00DA CDr45r01      [17]  218 	call	_LCD_SendNibble
   00DD 33            [ 6]  219 	inc	sp
                            220 ;z80lcd.c:47: LCD_SendNibble(0x00);
   00DE AF            [ 4]  221 	xor	a, a
   00DF F5            [11]  222 	push	af
   00E0 33            [ 6]  223 	inc	sp
   00E1 CDr45r01      [17]  224 	call	_LCD_SendNibble
   00E4 33            [ 6]  225 	inc	sp
                            226 ;z80lcd.c:48: LCD_SendNibble(0x06);
   00E5 3E 06         [ 7]  227 	ld	a,#0x06
   00E7 F5            [11]  228 	push	af
   00E8 33            [ 6]  229 	inc	sp
   00E9 CDr45r01      [17]  230 	call	_LCD_SendNibble
   00EC 33            [ 6]  231 	inc	sp
   00ED C9            [10]  232 	ret
   00EE                     233 _LCD_Init_end::
                            234 ;z80lcd.c:51: void LCD_DispString(char * string, int charCnt)
                            235 ;	---------------------------------
                            236 ; Function LCD_DispString
                            237 ; ---------------------------------
   00EE                     238 _LCD_DispString_start::
   00EE                     239 _LCD_DispString:
                            240 ;z80lcd.c:55: for (i = 0; i < charCnt; i++)
   00EE 11 00 00      [10]  241 	ld	de,#0x0000
   00F1                     242 00103$:
   00F1 21 04 00      [10]  243 	ld	hl,#4
   00F4 39            [11]  244 	add	hl,sp
   00F5 7B            [ 4]  245 	ld	a,e
   00F6 96            [ 7]  246 	sub	a, (hl)
   00F7 7A            [ 4]  247 	ld	a,d
   00F8 23            [ 6]  248 	inc	hl
   00F9 9E            [ 7]  249 	sbc	a, (hl)
   00FA E2rFFr00      [10]  250 	jp	PO, 00116$
   00FD EE 80         [ 7]  251 	xor	a, #0x80
   00FF                     252 00116$:
   00FF F0            [11]  253 	ret	P
                            254 ;z80lcd.c:57: LCD_DispChar(string[i]);
   0100 21 02 00      [10]  255 	ld	hl, #2
   0103 39            [11]  256 	add	hl, sp
   0104 7E            [ 7]  257 	ld	a, (hl)
   0105 23            [ 6]  258 	inc	hl
   0106 66            [ 7]  259 	ld	h, (hl)
   0107 6F            [ 4]  260 	ld	l, a
   0108 19            [11]  261 	add	hl,de
   0109 66            [ 7]  262 	ld	h,(hl)
   010A D5            [11]  263 	push	de
   010B E5            [11]  264 	push	hl
   010C 33            [ 6]  265 	inc	sp
   010D CDr16r01      [17]  266 	call	_LCD_DispChar
   0110 33            [ 6]  267 	inc	sp
   0111 D1            [10]  268 	pop	de
                            269 ;z80lcd.c:55: for (i = 0; i < charCnt; i++)
   0112 13            [ 6]  270 	inc	de
   0113 18 DC         [12]  271 	jr	00103$
   0115 C9            [10]  272 	ret
   0116                     273 _LCD_DispString_end::
                            274 ;z80lcd.c:61: void LCD_DispChar(char data)
                            275 ;	---------------------------------
                            276 ; Function LCD_DispChar
                            277 ; ---------------------------------
   0116                     278 _LCD_DispChar_start::
   0116                     279 _LCD_DispChar:
                            280 ;z80lcd.c:65: foo = (data >> 4) & 0x0F;
   0116 FD 21 02 00   [14]  281 	ld	iy,#2
   011A FD 39         [15]  282 	add	iy,sp
   011C FD 7E 00      [19]  283 	ld	a,0 (iy)
   011F CB 2F         [ 8]  284 	sra	a
   0121 CB 2F         [ 8]  285 	sra	a
   0123 CB 2F         [ 8]  286 	sra	a
   0125 CB 2F         [ 8]  287 	sra	a
   0127 E6 0F         [ 7]  288 	and	a, #0x0F
                            289 ;z80lcd.c:66: setb(foo, RS);
   0129 CB E7         [ 8]  290 	set	4, a
   012B 67            [ 4]  291 	ld	h,a
                            292 ;z80lcd.c:67: LCD_SendNibble(foo);
   012C E5            [11]  293 	push	hl
   012D 33            [ 6]  294 	inc	sp
   012E CDr45r01      [17]  295 	call	_LCD_SendNibble
   0131 33            [ 6]  296 	inc	sp
                            297 ;z80lcd.c:69: foo = data & 0xFF;
   0132 FD 21 02 00   [14]  298 	ld	iy,#2
   0136 FD 39         [15]  299 	add	iy,sp
                            300 ;z80lcd.c:70: setb(foo, RS);
   0138 FD 7E 00      [19]  301 	ld	a, 0 (iy)
   013B CB E7         [ 8]  302 	set	4, a
   013D 67            [ 4]  303 	ld	h,a
                            304 ;z80lcd.c:71: LCD_SendNibble(foo);
   013E E5            [11]  305 	push	hl
   013F 33            [ 6]  306 	inc	sp
   0140 CDr45r01      [17]  307 	call	_LCD_SendNibble
   0143 33            [ 6]  308 	inc	sp
   0144 C9            [10]  309 	ret
   0145                     310 _LCD_DispChar_end::
                            311 ;z80lcd.c:74: void LCD_SendNibble(char data)
                            312 ;	---------------------------------
                            313 ; Function LCD_SendNibble
                            314 ; ---------------------------------
   0145                     315 _LCD_SendNibble_start::
   0145                     316 _LCD_SendNibble:
   0145 DD E5         [15]  317 	push	ix
   0147 DD 21 00 00   [14]  318 	ld	ix,#0
   014B DD 39         [15]  319 	add	ix,sp
                            320 ;z80lcd.c:76: data &= 0x1F;
   014D DD 7E 04      [19]  321 	ld	a,4 (ix)
   0150 E6 1F         [ 7]  322 	and	a, #0x1F
                            323 ;z80lcd.c:78: setb(data, CLK);
   0152 DD 77 04      [19]  324 	ld	4 (ix), a
   0155 CB EF         [ 8]  325 	set	5, a
                            326 ;z80lcd.c:79: PB = data;
   0157 DD 77 04      [19]  327 	ld	4 (ix), a
   015A D3 02         [11]  328 	out	(_PB),a
                            329 ;z80lcd.c:80: delay_ms(1);
   015C 21 01 00      [10]  330 	ld	hl,#0x0001
   015F E5            [11]  331 	push	hl
   0160 CDr00r00      [17]  332 	call	_delay_ms
   0163 F1            [10]  333 	pop	af
                            334 ;z80lcd.c:82: clrb(data, CLK);
                            335 ;z80lcd.c:83: PB = data;
   0164 DD CB 04 AE   [23]  336 	res	5, 4 (ix)
   0168 DD 7E 04      [19]  337 	ld	a, 4 (ix)
   016B D3 02         [11]  338 	out	(_PB),a
                            339 ;z80lcd.c:84: delay_ms(1);
   016D 21 01 00      [10]  340 	ld	hl,#0x0001
   0170 E5            [11]  341 	push	hl
   0171 CDr00r00      [17]  342 	call	_delay_ms
   0174 F1            [10]  343 	pop	af
   0175 DD E1         [14]  344 	pop	ix
   0177 C9            [10]  345 	ret
   0178                     346 _LCD_SendNibble_end::
                            347 ;z80lcd.c:88: void LCD_ClearScreen(void)
                            348 ;	---------------------------------
                            349 ; Function LCD_ClearScreen
                            350 ; ---------------------------------
   0178                     351 _LCD_ClearScreen_start::
   0178                     352 _LCD_ClearScreen:
                            353 ;z80lcd.c:90: LCD_SendNibble(0x00);
   0178 AF            [ 4]  354 	xor	a, a
   0179 F5            [11]  355 	push	af
   017A 33            [ 6]  356 	inc	sp
   017B CDr45r01      [17]  357 	call	_LCD_SendNibble
   017E 33            [ 6]  358 	inc	sp
                            359 ;z80lcd.c:91: LCD_SendNibble(0x01);
   017F 3E 01         [ 7]  360 	ld	a,#0x01
   0181 F5            [11]  361 	push	af
   0182 33            [ 6]  362 	inc	sp
   0183 CDr45r01      [17]  363 	call	_LCD_SendNibble
   0186 33            [ 6]  364 	inc	sp
   0187 C9            [10]  365 	ret
   0188                     366 _LCD_ClearScreen_end::
                            367 	.area _CODE
                            368 	.area _INITIALIZER
                            369 	.area _CABS (ABS)
